import com.fasterxml.jackson.databind.ObjectMapper;

public class SingleFunctionJSONVulnerability {
    public void processData(String jsonData) {
        ObjectMapper objectMapper = new ObjectMapper();
        try {
            // Deserializing untrusted JSON input
            MyData data = objectMapper.readValue(jsonData, MyData.class);
            System.out.println("Processed data: " + data);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        SingleFunctionJSONVulnerability obj = new SingleFunctionJSONVulnerability();
        String maliciousJson = "{\"className\":\"malicious.Class\",\"method\":\"evilMethod\"}";
        obj.processData(maliciousJson);  // Dangerous, could lead to arbitrary code execution
    }
}

class MyData {
    private String name;
    // getters and setters
}
